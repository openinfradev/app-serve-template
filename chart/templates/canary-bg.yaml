{{- if .Values.canary.enabled }}
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: {{ .Values.name }}-bg
  namespace: {{ .Values.namespace }}
spec:
  # service mesh provider can be: kubernetes, istio, appmesh, nginx, gloo
  provider: kubernetes
  # deployment reference
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Values.name }}
  # the maximum time in seconds for the canary deployment
  # to make progress before rollback (default 600s)
  progressDeadlineSeconds: 60
  # HPA reference (optional)
  service:
    port: {{ .Values.service.port }}
    name: {{ .Values.name }}
    targetPort: web
  analysis:
    # schedule interval (default 60s)
    interval: 60s
    # max number of failed checks before rollback
    threshold: 5
    # number of checks to run before rollback
    iterations: 5
    # Prometheus checks based on 
    # http_request_duration_seconds histogram
    metrics:
      - name: my-request-success-rate
        templateRef:
          name: my-request-success-rate
          namespace: flagger
        # minimum req success rate (non 5xx responses)
        # percentage (0-100)
        thresholdRange:
          min: {{ .Values.canary.successThreshold }}
        interval: 1m
    # acceptance/load testing hooks
    webhooks:
      - name: load-test
        url: http://flagger-loadtester.flagger/
        timeout: 5s
        metadata:
          type: cmd
          cmd: "hey -z 1m -q 10 -c 2 http://{{ .Values.name }}-canary.{{ .Values.namespace }}:{{ .Values.service.port }}/"
{{- end }}
